#tooltip {
    width: 34rem; /* Tooltip area */
    position: absolute; /* Use absolute positioning */
    top: 0rem;
    left: 3.4rem;
    transition: opacity 1.5s ease; /* Transition for opacity */
    opacity: 0; /* Start with zero opacity */
    display: flex;/* Initially hidden */
    overflow: hidden;
    gap: 0rem;
}

#tooltip h4{
    margin: 0.15rem;
    font-size: 1.5rem;
}


.tooltipImage{
    width: auto;
    height: 18rem;
    border-radius: 20px;
}

body{
    overflow-x: hidden;
}

@media (max-width: 1100px) {
    #tooltip {
        position: relative; /* Change to relative positioning */
        top: 0; /* Reset top */
        left: 0; /* Reset left */
        margin-top: 20px; /* Add some spacing above */
        width: calc(100% - 40px); /* Adjust width to fit smaller screens */
    }

    #tooltipImage{
        width: 35rem;
        height: auto;
    }

    body{
        overflow: scroll;
    }    
}

#wordMap svg{
    margin-top: 20px;
    border-radius: 20px;
    border: 2px solid black;
}

#mainPanel {
    margin-top: 2rem;
    width: 50rem;
    border-right: solid 2px;
    transition: opacity 0.5s ease;
}

#LeftPanelImage {
    width: 25rem;
    border-radius: 20px;
}

#heading1 {
    position: absolute;
    top: 4rem;
    left: 18rem;
    font-size: 2.6rem;
}

#span1{
    color: rgb(247, 247, 247);
}

#span2{
    color: rgb(0, 0, 0);
    text-decoration: underline;
}

#descriptionSection {
    position: absolute;
    top: 10.5rem;
    left: 26.5rem;
    font-size: 1rem;
    width: 20rem;
}

#secondaryPanel{
    background-color: rgba(88, 87, 87, 0.028);
    width: 40rem;
    height: 37rem;
    position: fixed;
    top: 5.9rem;
    left: 53rem;
    border-radius: 20px;
    display: flex;
    justify-content: center;
    align-items: center;
}

#tooltipPlaceholder{
    background-color: rgb(0, 0, 0);
    width: 7rem;
    height: 7rem;
    border-radius: 80px;
    color: white;
    display: flex;          
    justify-content: center;  
    align-items: center; 
    position: absolute; /* Make it absolute */
    transition: transform 0.5s ease;
}

.moving-circle {
    position: absolute;
    width: 60px; /* Set to double the radius */
    height: 60px; /* Set to double the radius */
    border-radius: 50%;
    background-color: rgb(0, 0, 0); /* Color for the moving circle */
    pointer-events: none; /* Prevents mouse events */
}


.ResetButton {
    width: 6rem;
    height: 2rem;
    border-radius: 20px;
    border: none;
    position: fixed;
    overflow: hidden;
    background-color: #919191; /* Default background */
    color: black; /* Default text color */
    transition: color 0.5s ease; /* Smooth color transition */
}

.ResetButton::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(45deg, #323131, #353434);
    transform: translateX(-100%);
    transition: transform 0.5s ease;
    z-index: 0;
}

.ResetButton:hover::before {
    transform: translateX(0);
}

.ResetButton:hover {
    color: rgb(226, 224, 224); /* Change text color on hover */
    cursor: pointer;
    background-color: #919191; /* Keep solid background on hover */
    z-index: 1; /* Ensure button remains on top */
}

.ResetButton span {
    position: relative; /* Position text relative to button */
    z-index: 1; /* Keep text above the gradient */
}

#testDriveSection{
    position: relative;
    top: 0rem;
    left: 2rem;
    width: 45rem;
    padding-bottom: 2rem;
}

#testDriveSection h1{
    font-size: 3rem;
}

#testDriveSection p{
    position: relative;
    top: -1rem;
    font-size: 1.1rem;
}

#viewCatalogueButton{
    width: 43rem;
    height: 3rem;
}

.Buttons {
    width: 6rem;
    height: 2rem;
    border-radius: 2rem;
    border: none;
    position: relative;
    overflow: hidden;
    background-color: #939393; /* Default background */
    color: black; /* Default text color */
    transition: color 0.5s ease; /* Smooth color transition */
}

.Buttons::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(45deg, #323131, #353434);
    transform: translateX(-100%);
    transition: transform 0.5s ease;
    z-index: 0;
}

.Buttons:hover::before {
    transform: translateX(0);
}

.Buttons:hover {
    color: rgb(189, 177, 177); /* Change text color on hover */
    cursor: pointer;
    background-color: #919191; /* Keep solid background on hover */
    z-index: 1; /* Ensure button remains on top */
}

.Buttons span {
    position: relative; /* Position text relative to button */
    z-index: 1; /* Keep text above the gradient */
}
